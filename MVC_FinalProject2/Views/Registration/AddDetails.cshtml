@model MVC_FinalProject.Models.Registration

@{
    ViewBag.Title = "AddDetails";
}


<link href="~/Content/CSS/Registration_Validation_Style.css" rel="stylesheet" />
<link href="~/Content/CSS/RegistrationStyle.css" rel="stylesheet" />
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        <h4>REGISTRATION</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder="First name", @Id="fname", @onfocusout= "Checkfirstname()" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                <small></small>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last name", @Id = "lname", @onfocusout = "Checklastname()" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                <small></small>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @Id = "dob", @onfocusout = "Checkdateofbirth()" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                <small></small>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", @placeholder = "Gender", @Id = "gender", @onfocusout = "Checkgender()" } })
        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })*@
                @Html.RadioButtonFor(model => model.Gender, "Male", new { @class = "radio-button" }) Male
                @Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "radio-button" }) Female
                @Html.RadioButtonFor(model => model.Gender, "Other", new { @class = "radio-button" }) Other
                <small></small>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone number", @Id = "contact", @onfocusout = "Checkcontact()" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                <small></small>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email Id", @Id = "email", @onfocusout = "Checkemail()" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                <small></small>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your address", @Id = "address", @onfocusout = "Checkaddress()" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                <small></small>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @placeholder = "City", @Id = "city", @onfocusout = "Checkcity()" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                <small></small>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @placeholder = "State", @Id = "state", @onfocusout = "Checkstate()" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                <small></small>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Pincode", @Id = "pincode", @onfocusout = "Checkpincode()" } })
                @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                <small></small>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter a username", @Id = "username", @onfocusout = "Checkusername()" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                <small></small>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password", @Id = "password", @onfocusout = "Checkpassword()" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                <small></small>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirm password", @Id = "confirmpassword", @onfocusout = "Checkconfirmpassword()" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                <small></small>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Register" onclick="checkValidation()" /><br /><br />
                @Html.ActionLink("Login?", "Login", "Login")
            </div>
        </div>
    </div>
}
<script src="~/JavaScript/Registration_Validation.js"></script>

<div>
    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
